#!/usr/bin/env bash

# Enable .pythonrc.py
if [ -f "${HOME}/.pythonrc.py" ]; then
    export PYTHONSTARTUP="${HOME}/.pythonrc.py"
fi

# Ensure local virtualenv setup
if [ ! -f "${HOME}/opt/venv/bin/virtualenv" ]; then
    curl -sL --location --output /tmp/virtualenv.pyz https://bootstrap.pypa.io/virtualenv.pyz
    python3 /tmp/virtualenv.pyz ~/opt/venv
    ~/opt/venv/bin/pip install --upgrade pip
    ~/opt/venv/bin/pip install virtualenv
    mkdir -p ~/bin  # Ensure exists if new machine
    ln -s ~/opt/venv/bin/virtualenv ~/bin/virtualenv
fi

# default venv from `virtualenv "${HOME}/.venvs/base"`
if [ -d "${HOME}/.venvs/base" ]; then
    source "${HOME}/.venvs/base/bin/activate"
fi

# Enable tab completion of Python virtual environments
if [ -f /opt/_venv-activate/_venv-activate.sh ]; then
    _VENV_ACTIVATE_HOME="${HOME}/.venvs"
    _VENV_ACTIVATE_PYTHON=$(which python3)
    . /opt/_venv-activate/_venv-activate.sh
fi

# Enable h5ls tab completion
if [ -f /opt/_h5ls/_h5ls.sh ]; then
    . /opt/_h5ls/_h5ls.sh
fi

# # Enable CUDA Toolkit 10.2
# if [ -d "/usr/local/cuda-10.2/bin" ]; then
#     PATH="/usr/local/cuda-10.2/bin:/usr/local/cuda-10.2/NsightCompute-2019.1${PATH:+:${PATH}}"; export PATH;
#     LD_LIBRARY_PATH="/usr/local/cuda-10.2/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"; export LD_LIBRARY_PATH;
# fi
# Enable CUDA Toolkit 10.1
if [ -d "/usr/local/cuda-10.1/bin" ]; then
    PATH="/usr/local/cuda-10.1/bin:/usr/local/NVIDIA-Nsight-Compute-2019.1${PATH:+:${PATH}}"; export PATH;
    LD_LIBRARY_PATH="/usr/local/cuda-10.1/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"; export LD_LIBRARY_PATH;
fi

# Added by cpan
if [ -d "/home/${USER}/perl5" ]; then
    PATH="/home/${USER}/perl5/bin${PATH:+:${PATH}}"; export PATH;
    PERL5LIB="/home/${USER}/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
    PERL_LOCAL_LIB_ROOT="/home/${USER}/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
    PERL_MB_OPT="--install_base \"/home/${USER}/perl5\""; export PERL_MB_OPT;
    PERL_MM_OPT="INSTALL_BASE=/home/${USER}/perl5"; export PERL_MM_OPT;
fi

# Add Bazel support
if [ -d "/home/${USER}/bin" ]; then
    PATH="/home/${USER}/bin${PATH:+:${PATH}}"; export PATH;
fi
if [ -d "/home/${USER}/.bazel/bin" ]; then
    . "/home/${USER}/.bazel/bin/bazel-complete.bash"
fi

# Add Rust
if [ -d "${HOME}/.cargo/bin" ]; then
    PATH="${HOME}/.cargo/bin${PATH:+:${PATH}}"; export PATH;
fi

# Add rbenv
if [ -d "${HOME}/.rbenv/bin" ]; then
    PATH="${HOME}/.rbenv/bin${PATH:+:${PATH}}"; export PATH;
    eval "$(rbenv init -)"
fi

# Add GPG key
export GPG_TTY=$(tty)
